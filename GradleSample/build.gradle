import fr.flowsqy.specialsourcegp.task.RemapJar

plugins {
    id "java"
    id "com.github.flowsqy.specialsource" version "1.0.0"
}

repositories {
    mavenLocal()
}

configurations {
    mappings {
        canBeResolved = true
        canBeConsumed = false
    }
    inher {
        canBeResolved = true
        canBeConsumed = false
        transitive = false
    }
    compileClasspath.transitive = false
    compileOnly.extendsFrom(inher)
}

dependencies {
    compileOnly "org.spigotmc:spigot-api:1.19.4-R0.1-SNAPSHOT"
    inher group: "org.spigotmc", name: "spigot", "version": "1.19.3-R0.1-SNAPSHOT", classifier:"remapped-mojang"
    mappings group: "org.spigotmc" ,name: "minecraft-server", version: "1.19.3-R0.1-SNAPSHOT", classifier: "maps-mojang", ext: "txt"
}

java {
    sourceCompatibility = "17"
    targetCompatibility = "17"
}

tasks.register("remap-obf", RemapJar) {
    input = tasks.jar.archiveFile
    output = tasks.jar.destinationDirectory.file("Obf.jar")
    mapping {
        def mappingProvider =  project.configurations.mappings.incoming.artifacts.resolvedArtifacts.map {artSet ->
            artSet.find(art ->
                    art.id.displayName.contains(":minecraft-server:")
            ).getFile()
        }

        def dependencyProvider =  project.configurations.inher.incoming.artifacts.resolvedArtifacts.map {artSet ->
            artSet.find(art ->
                art.id.displayName.contains(":spigot:")
            ).getFile()
        }
        mappingFiles.from = mappingProvider.map {it.getAbsolutePath()}
        reverse = true
        inheritance {
            jars = layout.file(dependencyProvider as Provider<File>).map {Collections.singletonList(it)}
        }
    }
}